# /etc/nginx/conf.d/nginx-prod.conf

####################################################
# PROD SERVER - HTTPS (port 443)
####################################################
server {
    listen 443 ssl;
    server_name ars.com;

    ssl_certificate     /etc/nginx/ssl/ars.crt;
    ssl_certificate_key /etc/nginx/ssl/ars.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    http2;

    add_header X-Content-Type-Options "nosniff";
    add_header X-Frame-Options "DENY";
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' data: blob:;";

    root /usr/share/nginx/html;
    index index.html;

    # SPA routing for Angular
    location / {
        # If the requested URI is not a file, and not a directory,
        # serve index.html instead so Angular can take over routing
        try_files $uri $uri/ /index.html;
    }

    # Cache static assets
    location ~* \.(ico|css|js|gif|jpe?g|png|woff2?|ttf|svg|eot)$ {
        expires 6M;
        access_log off;
        add_header Cache-Control "public";
    }

    # API public
    location /api/p {
        proxy_pass http://localhost:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # API secure (cookie HttpOnly + SameSite=Strict; Secure)
    location /api {
        proxy_pass http://localhost:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cookie_path / "/; HttpOnly; Secure; SameSite=Strict";
    }

    # WebSocket
    location /ws {
        proxy_pass http://localhost:8080;
        # Ensure WebSocket upgrade headers are passed through correctly
        proxy_http_version 1.1;  # Use HTTP/1.1 for WebSocket connections
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade"; # Required for WebSocket handshake
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

####################################################
# HTTP -> HTTPS redirect for prod
####################################################
server {
    listen 80;
    server_name ars.com;
    return 301 https://$host$request_uri;
}
